{"version":3,"file":"static/js/392.47f23877.chunk.js","mappings":"qPACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAA4G,wB,SCK/FA,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GACzBN,EAAQM,EACT,GAEF,GAAE,KAGD,8BACGP,EAAKQ,OAAS,GACb,eAAIC,UAAWC,EAAf,SACGV,EAAKW,KAAI,SAAAC,GACR,IAAMC,EACJ,kCAAoCD,EAAME,aAI5C,OACE,gBAAmBL,UAAWC,EAA9B,UACGE,EAAME,cACL,gBAAKC,IAAKF,EAAWG,IAAKJ,EAAMK,QAEhC,gBAAKF,IAPT,qFAOyBC,IAAKJ,EAAMK,KAAMC,MAAM,SAE9C,eAAIT,UAAWC,EAAf,SAA8BE,EAAMK,QACpC,eAAGR,UAAWC,EAAd,wBAA4CE,EAAMO,eAP3CP,EAAMQ,GAUlB,OAGH,cAAGC,MAAO,CAAEC,WAAY,OAAQC,WAAY,OAA5C,6DAMP,EAED,G,sKC/CAC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,6GAEEF,EAAAA,GAAAA,IAAA,oCAAuCC,IAFzC,cAEfE,EAFe,yBAGdA,EAASpB,KAAKqB,SAHA,gCAKrBC,QAAQC,MAAR,MALqB,yDAAH,qDAUTzB,EAAY,mCAAG,WAAMe,GAAN,gGAEDI,EAAAA,GAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,oBAFC,cAElBE,EAFkB,yBAKjBA,EAASpB,KAAKP,MALG,gCAOxB6B,QAAQC,MAAR,MAPwB,yDAAH,sDAYZC,EAAe,mCAAG,WAAMX,GAAN,gGAEJI,EAAAA,GAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,qBAFI,cAErBE,EAFqB,yBAKpBA,EAASpB,KAAKqB,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDAYfE,EAAS,mCAAG,WAAMC,GAAN,gGAEET,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACmCQ,IAHrC,cAEfN,EAFe,yBAKdA,EAASpB,KAAKqB,SALA,gCAOrBC,QAAQC,MAAR,MAPqB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","utils/api/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__bULim\",\"item\":\"cast_item__AMMjV\",\"actor\":\"cast_actor__cO6oa\",\"character\":\"cast_character__Erja1\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'utils/api/getMovies';\n\nimport styles from './cast.module.css';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(data => {\n      setCast(data);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul className={styles.list}>\n          {cast.map(actor => {\n            const imageLink =\n              'https://image.tmdb.org/t/p/w200' + actor.profile_path;\n            const ifNoImage =\n              'https://www.york.ac.uk/media/biology/images/staffimages/NoImageAvailableFemale.jpg';\n\n            return (\n              <li key={actor.id} className={styles.item}>\n                {actor.profile_path ? (\n                  <img src={imageLink} alt={actor.name} />\n                ) : (\n                  <img src={ifNoImage} alt={actor.name} width=\"200\" />\n                )}\n                <h5 className={styles.actor}>{actor.name}</h5>\n                <p className={styles.character}>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p style={{ marginLeft: '30px', fontWeight: '500' }}>\n          We don't have cast information for this movie.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = 'e04c68f789be72aeeeea023bd48810ca';\n\nexport const getTrends = async () => {\n  try {\n    const response = await axios.get(`/trending/all/day?api_key=${apiKey}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${apiKey}&language=en-US&`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","data","length","className","styles","map","actor","imageLink","profile_path","src","alt","name","width","character","id","style","marginLeft","fontWeight","axios","apiKey","getTrends","response","results","console","error","getMovieReviews","getMovies","query"],"sourceRoot":""}
{"version":3,"file":"static/js/186.1c805681.chunk.js","mappings":"oOAIaA,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAf,GAEnC,GAAE,KAGD,8BACGP,EAAQQ,OAAS,GAChB,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,cAAGC,MAAO,CAAEC,WAAY,OAAQC,WAAY,OAA5C,wDAMP,EAED,W,sKC/BAC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,6GAEEF,EAAAA,GAAAA,IAAA,oCAAuCC,IAFzC,cAEfE,EAFe,yBAGdA,EAASb,KAAKc,SAHA,gCAKrBC,QAAQC,MAAR,MALqB,yDAAH,qDAUTC,EAAY,mCAAG,WAAMX,GAAN,gGAEDI,EAAAA,GAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,oBAFC,cAElBE,EAFkB,yBAKjBA,EAASb,KAAKkB,MALG,gCAOxBH,QAAQC,MAAR,MAPwB,yDAAH,sDAYZlB,EAAe,mCAAG,WAAMQ,GAAN,gGAEJI,EAAAA,GAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,qBAFI,cAErBE,EAFqB,yBAKpBA,EAASb,KAAKc,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDAYfG,EAAS,mCAAG,WAAMC,GAAN,gGAEEV,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACmCS,IAHrC,cAEfP,EAFe,yBAKdA,EAASb,KAAKc,SALA,gCAOrBC,QAAQC,MAAR,MAPqB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/api/getMovies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'utils/api/getMovies';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(data => setReviews(data));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(notice => (\n            <li key={notice.id}>\n              <b>Author: {notice.author}</b>\n              <p>{notice.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p style={{ marginLeft: '30px', fontWeight: '500' }}>\n          We don't have any reviews for this movie.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = 'e04c68f789be72aeeeea023bd48810ca';\n\nexport const getTrends = async () => {\n  try {\n    const response = await axios.get(`/trending/all/day?api_key=${apiKey}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${apiKey}&language=en-US&`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","data","length","map","notice","author","content","id","style","marginLeft","fontWeight","axios","apiKey","getTrends","response","results","console","error","getMovieCast","cast","getMovies","query"],"sourceRoot":""}